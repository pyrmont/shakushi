require 'taipo'

module Shakushi
  class Filters < Array
    # Initialize a new collection of filters
    #
    # The +input+ for this method must be an array of hashes or arrays (or a
    # mixture of the two). The inner arrays must contain hashes. All hashes
    # must consist of two keys: a tag name and a pattern.
    # 
    # When {Shakushi::Filters#filter} is called, it will treat elements in the 
    # outer array as disjunctive filters. That is, any item in a feed that
    # any filter will result in the item being retained. In contrast, a filter
    # within an array will be treated as a conjunctive filter. An item must
    # match all the conjunctive filters to be retained.
    #
    # Typically, +input+ will be generated by +JSON.parse+ being called on a
    # JSON-encoded file.
    #
    # @param input [Array<Hash|Array<Hash>>] a collection of objects 
    #   representing the filters
    #
    # @since 1.0.0
    def initialize(input)
      check types, input: 'Array<Hash|Array<Hash>>'
      input.each do |i|
        filter = if i.is_a? Array
                   pairs = i.reduce([]) do |memo,conjunct|
                             pair = Hash.new
                             pair[:tag] = conjunct['tag']
                             pair[:pattern] = Regexp.new(conjunct['pattern'])
                             memo.push pair
                           end
                   Shakushi::Filter.new(tags_and_patterns: pairs)
                 else
                   Shakushi::Filter.new(tag: f['tag'], 
                                        pattern: Regexp.new(f['pattern']))
                 end
        self.push filter
      end
    end

    # Return an array of filtered items
    #
    # As described in {Shakushi::Filters#initialize}, this method will filter 
    # out items that do not match any of the individual {Shakushi::Filter} 
    # elements.
    #
    # @param items [Array<Shakushi::Feed::Entry>] the items to be filtered
    #
    # @return [Array<Shakushi::Feed::Entry>] the filtered items (note: this 
    #   could be an empty array)
    #
    # @since 1.0.0
    # @api private
    def filter(items)
      check types, items: 'Array<Shakushi::Feed::Entry>'
      items.select do |i|
        self.any? do |f|
          f.filter i
        end
      end
    end
  end
end
